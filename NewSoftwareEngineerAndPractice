package software.engineer.and.practice;
import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

/**
 *
 * @author Connor
 */
public class SoftwareEngineerAndPractice {
    public static void main(String[] args) {
        boolean running = true;
        Items chainmail = new Items("Chainmail", 3, 0, 0, 0, 0, 17);
        Items dummy = new Items("Dummy Item for Method Calling", 1, 0, 0, 0, 0, 0);
        Character player = new Character();
        String input;
         Scanner scan = new Scanner(System.in);
         Random rand = new Random();
        player.showStats();
        player.showEquip();
        player.equipment = chainmail.ADDequipment(player.equipment);
        player.stats = chainmail.ADDstats(player.stats);
        player.changeRep(5);
        player.showStats();
        player.showEquip();
        player.gainExp(100);
        player.gainExp(100);
        player.showStats();
        
        Area area1 = new Area(0, null, null);
               int area1_L = rand.nextInt(3) + 5;
               //System.out.println(area1_L);
               area1.ensureExit();
               area1.ensureBoss();
               for(int i = 0; i<area1_L-1; i++)
               {
                   area1.addNode(rand.nextInt(3));
                   //area1.addNode(0);
               }
               //Area.listLength(area1);
               Area area1_pp = area1;
               Chest area1_chest = new Chest();    
        
        while(running){
        boolean area1_cleared = false;
          boolean area2_cleared = false;
          boolean area3_cleared = false;
          boolean area4_cleared = false;
           System.out.println("\n\t\tAt any time, type \"help\" for a list of basic commands");
           System.out.println("\n\n\t\tYou've arrived at the mouth of the river.  You dont have much time, the mission has just started. You must move foward and find Kurtz."
                      + "\n\t\tAfter all, the mission is the only thing you live for");

           while (area1_cleared == false) {
                System.out.println("\n\t\tWhat would you like to do?");
                input = scan.nextLine();
              OUTER_4:
                OUTER_5:
                switch (input) {
                    case "help":
                        player.help();
                        break;
                    case "forward":
                    case "f":
                        area1_pp = area1_pp.getForeLink();
                        //System.out.println(area1_pp.getData());
                        switch (area1_pp.getData()) {
                            case 0:
                                int area1_encounter;
                                area1_encounter = area1.area_1_Encounter(rand.nextInt(4), player.stats[4], player.name);
                                if(area1_encounter<1000)
                                    player.stats[0] = player.stats[0] - area1_encounter;
                                else if(area1_encounter == 1111)
                                {
                                    Items katana = new Items("Katana", 1, 0, 10, 0, 0, 0);
                                     player.inventory = katana.ADDinventory(player.inventory);
                                }
                                else if(area1_encounter == 1112)
                                {
                                   Enemy rogue = new Enemy(1, 60, 15, 2) ;
                                   
                                }
                        }
                    case "equipment":
                    case"se":
                        System.out.println(Arrays.toString(player.equipment));
                        break;
                    case "bag":
                    case "b":
                        System.out.println(Arrays.toString(player.inventory));
                        break;
                    case "drop":
                    case "d":
                     System.out.println("From where would you like to drop something?\n\t1. Bag\n\t2. Equipment");
                     try {
                         int temp = Integer.parseInt(scan.nextLine());
                         switch (temp) {
                             case 1:
                                 System.out.println("Which item did you want to drop from your bag? Type 1 for first item, 2 for second, and so on.");
                                 System.out.println("\t" + Arrays.toString(player.inventory));
                                 try {
                                     int tempa = Integer.parseInt(scan.nextLine()) - 1;
                                     if(tempa < player.inventory.length){
                                        if (player.inventory[tempa] != null) {
                                            System.out.println("You dropped your " + player.inventory[tempa].name + ".");
                                            player.inventory = player.inventory[tempa].dropInventory(player.inventory);
                                            break OUTER_4;
                                        }
                                        else
                                            System.out.println("You do not have an item in that slot.");
                                     }
                                     else {
                                         System.out.println("You do not have an item in that slot. Please try again.");
                                     }
                                 } catch (NumberFormatException e) {
                                     System.out.println("Please try again and enter a number.");
                                     break OUTER_4;
                                 }
                                 break OUTER_4;
                             case 2:
                                 System.out.println("Which item did you want to drop from your equipment? Type 1 for first item, 2 for second, and so on.");
                                 System.out.println("\t" + Arrays.toString(player.equipment));
                                 try {
                                     int tempa = Integer.parseInt(scan.nextLine()) - 1;
                                     if(tempa < player.equipment.length){
                                        if (player.equipment[tempa] != null) {
                                            System.out.println("You dropped your " + player.equipment[tempa].name + ".");
                                            player.stats = player.equipment[tempa].SUBstats(player.stats);
                                            player.equipment = player.equipment[tempa].dropEquipment(player.equipment);
                                            break OUTER_4;
                                        }
                                        else
                                            System.out.println("You do not have an item in that slot.");
                                     }
                                     else {
                                         System.out.println("You do not have an item in that slot. Please try again.");
                                     }
                                 } catch (NumberFormatException e) {
                                     System.out.println("Please try again and enter a number.");
                                     break OUTER_4;
                                 }
                                 break;
                             default:
                                 System.out.println("Please try again and enter a valid answer.");
                                 break;
                         }
                     }catch(NumberFormatException e){
                         System.out.println("Please try again and enter a number.");
                         break;
                     }
                     break;
                 case "equip":
                 case "e":
                    if(!dummy.isFull(player.equipment)){
                        System.out.println("What item did you want to equip from your bag? Type 1 for first item, 2 for second, and so on.");
                        System.out.println("\t" + Arrays.toString(player.inventory));
                        try{
                            int tempa = Integer.parseInt(scan.nextLine()) - 1;
                            if(tempa < player.inventory.length){
                                if(player.inventory[tempa] != null){
                                    System.out.println("You equipped your " + player.inventory[tempa].name + ".");
                                    player.stats = player.inventory[tempa].ADDstats(player.stats);
                                    Items[][] temp = player.inventory[tempa].equip(player.inventory, player.equipment);
                                    player.inventory = temp[0];
                                    player.equipment = temp[1];
                                    break;
                                }
                                else
                                    System.out.println("You do not have an item in that slot.");
                            }
                            else
                                System.out.println("You do not have an equipped item in that slot.");
                        }
                        catch(NumberFormatException e){
                            System.out.println("Please enter a number.");
                            break;
                        }
                        break;
                    }
                    else
                        System.out.println("Your equipment is full! You can't equip an item.");
                    break;
                case "unequip":
                case "ue":
                    if(!dummy.isFull(player.inventory)){
                        System.out.println("What item did you want to unequip from your equipment? Type 1 for first item, 2 for second, and so on.");
                        System.out.println("\t" + Arrays.toString(player.equipment));
                        try{
                            int tempa = Integer.parseInt(scan.nextLine()) - 1;
                            if(tempa < player.equipment.length){
                                if(player.equipment[tempa] != null){
                                    System.out.println("You unequipped your " + player.equipment[tempa].name + ".");
                                    player.stats = player.equipment[tempa].SUBstats(player.stats);
                                    Items[][] temp = player.equipment[tempa].unequip(player.inventory, player.equipment);
                                    player.inventory = temp[0];
                                    player.equipment = temp[1];
                                    break;
                                }
                                else
                                    System.out.println("You do not have an item in that slot.");
                            }
                            else
                                System.out.println("You do not have an equipped item in that slot.");
                        }
                        catch(NumberFormatException e){
                            System.out.println("Please enter a number.");
                            break;
                        }
                        break;
                    }
                  else
                    System.out.println("Your bag is full! You can't unequip an item.");
                  break;
                 case "use":
                 case "u":
                     System.out.println("What item did you want to use from your bag? Type 1 for first item, 2 for second, and so on.");
                     System.out.println("\t" + Arrays.toString(player.inventory));
                     try{
                         int tempa = Integer.parseInt(scan.nextLine()) - 1;
                         if(tempa < player.inventory.length){
                            if(player.inventory[tempa] != null){
                                if(player.inventory[tempa].typeCheckConsumable()){
                                    System.out.println("You use " + player.inventory[tempa].name + ".");
                                    player.stats = player.inventory[tempa].ADDstats(player.stats);
                                    player.inventory = player.inventory[tempa].dropInventory(player.inventory);
                                }
                                else
                                    System.out.println("That is not a usable item.");
                            }
                            else
                             System.out.println("You do not have an item in that slot.");
                         }
                         else
                             System.out.println("You do not have an item in that slot.");
                     }
                     catch(NumberFormatException e){
                         System.out.println("Please enter a number.");
                         break;
                     }
                     break;
                 case "item stats":
                 case "is":
                     System.out.println("Where is this item located?\n\t1. Bag\n\t2. Equipment");
                     try {
                         int temp = Integer.parseInt(scan.nextLine());
                         switch (temp) {
                             case 1:
                                 System.out.println("What item do you want to know the stats for? Type 1 for first item, 2 for second, and so on.");
                                 System.out.println("\tBag: " + Arrays.toString(player.inventory));
                                 try {
                                     int tempa = Integer.parseInt(scan.nextLine()) - 1;
                                     if(tempa < player.inventory.length){
                                        if(player.inventory[tempa] != null){
                                            System.out.println(player.inventory[tempa].name + " alters your stats in this way:");
                                            player.inventory[tempa].getStats();
                                        }
                                        else
                                            System.out.println("You do not have an item in that slot.");
                                     }
                                     else{
                                         System.out.println("You do not have an item in that slot. Please try again.");
                                     }
                                 } catch (NumberFormatException e) {
                                     System.out.println("Please try again and enter a number.");
                                     break OUTER_5;
                                 }
                                 break OUTER_5;
                             case 2:
                                 System.out.println("What item do you want to know the stats for? Type 1 for first item, 2 for second, and so on.");
                                 System.out.println("\tEquipment: " + Arrays.toString(player.equipment));
                                 try {
                                     int tempa = Integer.parseInt(scan.nextLine()) - 1;
                                     if(tempa < player.equipment.length){
                                        if(player.equipment[tempa] != null){
                                            System.out.println(player.equipment[tempa].name + " alters your stats in this way:");
                                            player.equipment[tempa].getStats();
                                        }
                                        else
                                            System.out.println("You do not have an item in that slot.");
                                     }
                                     else{
                                         System.out.println("You do not have an item in that slot. Please try again.");
                                     }
                                 } catch (NumberFormatException e) {
                                     System.out.println("Please try again and enter a number.");
                                     break OUTER_5;
                                 }
                                 break OUTER_5;
                             default:
                                 System.out.println("Please try again and enter a valid answer.");
                                 break;
                         }
                     }catch(NumberFormatException e){
                         System.out.println("Please try again and enter a number.");
                         break;
                     }
                     break;
                    case "stats":
                    case "s":
                        player.showStats();
                        break;
                    case "skills":
                    case "sk":
                        player.skilltree.printTree();
                        break;
                    case "skill info":
                    case "si":
                        System.out.println(player.skills.length);
                        System.out.print("\tPlease enter the name of the skill that you want information about: ");
                        while(true){
                            int temp = 0;
                            String s = scan.nextLine();
                        for (Skills skill : player.skills) {
                            if (skill != null) {
                                if (s.equalsIgnoreCase(skill.name)) {
                                    System.out.println(skill.getSkillInfo());
                                    temp++;
                                    break;
                                }
                            }
                        }
                            if(temp != 0)
                                break;
                            else
                                System.out.println("\tPlease enter a skill you have available or a valid skill name.");
                        }
                        break;
                    default:
                        System.out.println("enter a valid command (use \"help\" for a list of basic commands)");
                        break;
                }
            }
        }
    }
}
